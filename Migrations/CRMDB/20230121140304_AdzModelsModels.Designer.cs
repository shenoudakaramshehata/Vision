// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vision.Data;

#nullable disable

namespace Vision.Migrations.CRMDB
{
    [DbContext(typeof(CRMDBContext))]
    [Migration("20230121140304_AdzModelsModels")]
    partial class AdzModelsModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Vision.Models.AdContent", b =>
                {
                    b.Property<long>("AdContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AdContentId"), 1L, 1);

                    b.Property<int>("AdTemplateConfigId")
                        .HasColumnType("int");

                    b.Property<long>("ClassifiedAdId")
                        .HasColumnType("bigint");

                    b.HasKey("AdContentId");

                    b.HasIndex("AdTemplateConfigId");

                    b.HasIndex("ClassifiedAdId");

                    b.ToTable("AdContent", (string)null);
                });

            modelBuilder.Entity("Vision.Models.AdContentValue", b =>
                {
                    b.Property<long>("AdContentValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AdContentValueId"), 1L, 1);

                    b.Property<long>("AdContentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdContentValueId");

                    b.HasIndex("AdContentId");

                    b.ToTable("AdContentValue", (string)null);
                });

            modelBuilder.Entity("Vision.Models.AdTemplateConfig", b =>
                {
                    b.Property<int>("AdTemplateConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdTemplateConfigId"), 1L, 1);

                    b.Property<string>("AdTemplateFieldCaptionAr")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AdTemplateFieldCaptionEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ClassifiedAdsCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FieldTypeId")
                        .HasColumnType("int");

                    b.HasKey("AdTemplateConfigId");

                    b.HasIndex("ClassifiedAdsCategoryId");

                    b.HasIndex("FieldTypeId");

                    b.ToTable("AdTemplateConfig");
                });

            modelBuilder.Entity("Vision.Models.AdTemplateOption", b =>
                {
                    b.Property<int>("AdTemplateOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdTemplateOptionId"), 1L, 1);

                    b.Property<int>("AdTemplateConfigId")
                        .HasColumnType("int");

                    b.Property<string>("OptionAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OptionEn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AdTemplateOptionId");

                    b.HasIndex("AdTemplateConfigId");

                    b.ToTable("AdTemplateOption");
                });

            modelBuilder.Entity("Vision.Models.ClassifiedAd", b =>
                {
                    b.Property<long>("ClassifiedAdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClassifiedAdId"), 1L, 1);

                    b.Property<int?>("ClassifiedAdsCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UseId")
                        .HasColumnType("text");

                    b.Property<int?>("Views")
                        .HasColumnType("int");

                    b.HasKey("ClassifiedAdId");

                    b.HasIndex("ClassifiedAdsCategoryId");

                    b.ToTable("ClassifiedAd", (string)null);
                });

            modelBuilder.Entity("Vision.Models.ClassifiedAdsCategory", b =>
                {
                    b.Property<int>("ClassifiedAdsCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassifiedAdsCategoryId"), 1L, 1);

                    b.Property<string>("ClassifiedAdsCategoryDescAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassifiedAdsCategoryDescEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ClassifiedAdsCategoryIsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ClassifiedAdsCategoryParentId")
                        .HasColumnType("int");

                    b.Property<string>("ClassifiedAdsCategoryPic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClassifiedAdsCategorySortOrder")
                        .HasColumnType("int");

                    b.Property<string>("ClassifiedAdsCategoryTitleAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClassifiedAdsCategoryTitleEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassifiedAdsCategoryId");

                    b.HasIndex(new[] { "ClassifiedAdsCategoryParentId" }, "IX_ClassifiedAdsCategory_ClassifiedAdsCategoryParentId");

                    b.ToTable("ClassifiedAdsCategory", (string)null);
                });

            modelBuilder.Entity("Vision.Models.FieldType", b =>
                {
                    b.Property<int>("FieldTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FieldTypeTitle")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("FieldTypeId");

                    b.ToTable("FieldType");
                });

            modelBuilder.Entity("Vision.Models.AdContent", b =>
                {
                    b.HasOne("Vision.Models.AdTemplateConfig", "AdTemplateConfig")
                        .WithMany("AdContents")
                        .HasForeignKey("AdTemplateConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vision.Models.ClassifiedAd", "ClassifiedAd")
                        .WithMany("AdContents")
                        .HasForeignKey("ClassifiedAdId")
                        .IsRequired()
                        .HasConstraintName("FK_AdContent_ClassifiedAd");

                    b.Navigation("AdTemplateConfig");

                    b.Navigation("ClassifiedAd");
                });

            modelBuilder.Entity("Vision.Models.AdContentValue", b =>
                {
                    b.HasOne("Vision.Models.AdContent", "AdContent")
                        .WithMany("AdContentValues")
                        .HasForeignKey("AdContentId")
                        .IsRequired()
                        .HasConstraintName("FK_AdContentValue_AdContent");

                    b.Navigation("AdContent");
                });

            modelBuilder.Entity("Vision.Models.AdTemplateConfig", b =>
                {
                    b.HasOne("Vision.Models.ClassifiedAdsCategory", "ClassifiedAdsCategory")
                        .WithMany("AdTemplateConfigs")
                        .HasForeignKey("ClassifiedAdsCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_AdTemplateConfig_ClassifiedAdsCategory");

                    b.HasOne("Vision.Models.FieldType", "FieldType")
                        .WithMany("AdTemplateConfigs")
                        .HasForeignKey("FieldTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_AdTemplateConfig_FieldType");

                    b.Navigation("ClassifiedAdsCategory");

                    b.Navigation("FieldType");
                });

            modelBuilder.Entity("Vision.Models.AdTemplateOption", b =>
                {
                    b.HasOne("Vision.Models.AdTemplateConfig", "AdTemplateConfig")
                        .WithMany("AdTemplateOptions")
                        .HasForeignKey("AdTemplateConfigId")
                        .IsRequired()
                        .HasConstraintName("FK_AdTemplateOption_AdTemplateConfig");

                    b.Navigation("AdTemplateConfig");
                });

            modelBuilder.Entity("Vision.Models.ClassifiedAd", b =>
                {
                    b.HasOne("Vision.Models.ClassifiedAdsCategory", "ClassifiedAdsCategory")
                        .WithMany("ClassifiedAds")
                        .HasForeignKey("ClassifiedAdsCategoryId")
                        .HasConstraintName("FK_ClassifiedAd_ClassifiedAdsCategory");

                    b.Navigation("ClassifiedAdsCategory");
                });

            modelBuilder.Entity("Vision.Models.ClassifiedAdsCategory", b =>
                {
                    b.HasOne("Vision.Models.ClassifiedAdsCategory", "ClassifiedAdsCategoryParent")
                        .WithMany("InverseClassifiedAdsCategoryParent")
                        .HasForeignKey("ClassifiedAdsCategoryParentId")
                        .HasConstraintName("FK_ClassifiedAdsCategory_ClassifiedAdsCategory");

                    b.Navigation("ClassifiedAdsCategoryParent");
                });

            modelBuilder.Entity("Vision.Models.AdContent", b =>
                {
                    b.Navigation("AdContentValues");
                });

            modelBuilder.Entity("Vision.Models.AdTemplateConfig", b =>
                {
                    b.Navigation("AdContents");

                    b.Navigation("AdTemplateOptions");
                });

            modelBuilder.Entity("Vision.Models.ClassifiedAd", b =>
                {
                    b.Navigation("AdContents");
                });

            modelBuilder.Entity("Vision.Models.ClassifiedAdsCategory", b =>
                {
                    b.Navigation("AdTemplateConfigs");

                    b.Navigation("ClassifiedAds");

                    b.Navigation("InverseClassifiedAdsCategoryParent");
                });

            modelBuilder.Entity("Vision.Models.FieldType", b =>
                {
                    b.Navigation("AdTemplateConfigs");
                });
#pragma warning restore 612, 618
        }
    }
}
