@page
@model Vision.Areas.CRM.Pages.Configurations.ManageClasifiedChart.AdsDetailsModel
@Html.AntiForgeryToken()
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewBag.Title = "Ads Details";
    ViewBag.pTitle = "Ads Details";
    ViewBag.pageTitle = "Ads Details";
}

@section styles{
    <!--Swiper slider css-->
    <link href="~/assets/libs/swiper/swiper-bundle.min.css" rel="stylesheet" type="text/css" />
}

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="row gx-lg-5">
                    <partial name="_Gallery" model="@Model.adsImages" view-data=" ViewData" />
                    <!-- end col -->

                    <div class="col-xl-8">
                        <div class="mt-xl-0 mt-5">
                           
                                <partial name="_MainInfo" model="@Model.mainInfo" view-data=" ViewData" />
                               <partial name="_Location" model="@Model.locationVM" view-data=" ViewData" />

                            <partial name="_Reel" model="@Model.classifiedAd" view-data=" ViewData"  />
                            <!-- end row -->
                            <partial name="_Description" model="@Model.classifiedAd" view-data=" ViewData" />
                            <input type="text" id="ClassifiedId" value="@Model.classifiedAd.ClassifiedAdId" hidden />
                             <input type="text" id="LatID" value="@Model.Lat" hidden />
                             <input type="text" id="LngID" value="@Model.Lng" hidden />
                             <!-- Dynamic Extra Features and checkBox -->
                            <div class="row"  id="FeaturesId" >
                               
                            </div>

                             <!-- product-Description -->
                            <div class="product-content mt-5">
                                <h5 class="fs-14 mb-3" id="InfoId">Info :</h5>
                                
                             
                                  
                                       
                                    
                                
                            </div>
                            <!-- product-content -->
                             <!-- product-Reviews -->
                            <div class="mt-5">
                                
                                <div class="row gy-4 gx-0">
                                    
                                    <div class="col-lg-8">
                                    <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title mb-0">Location</h4>
                                    </div><!-- end card header -->

                                    <div class="card-body">
                                        <div id="gmaps-markers" class="gmaps"></div>
                                    </div><!-- end card-body -->
                                </div><!-- end card -->                                    </div>
                                    <!-- end col -->
                                </div>
                                <!-- end Ratings & Reviews -->
                            </div>
                            <!-- end card body -->
                        </div>
                    </div>
                    <!-- end col -->
                </div>
                <!-- end row -->
            </div>
            <!-- end card body -->
        </div>
        <!-- end card -->
    </div>
    <!-- end col -->
</div><!-- end row -->
@section scripts{
    <!--Swiper slider js-->
    <script src="~/assets/libs/swiper/swiper-bundle.min.js"></script>

    <!-- ecommerce product details init -->
    <script src="~/assets/js/pages/ecommerce-product-details.init.js"></script>
      <script src="~/assets/libs/prismjs/prism.js"></script>

    <!-- google maps api -->
    <script src="https://maps.google.com/maps/api/js?key=AIzaSyCtSAR45TFgZjOs4nBFFZnII-6mMHLfSYI"></script>

    <!-- gmaps plugins -->
    <script src="~/assets/libs/gmaps/gmaps.min.js"></script>

    <!-- gmaps init -->
@*    <script src="~/assets/js/pages/gmaps.init.js"></script>
*@
    <!-- App js -->
    <script src="~/assets/js/app.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
}
<script>
    var Feature = document.getElementById("FeaturesId");
    FeaturesId.innerHTML += "";

    var Info = document.getElementById("InfoId");
    InfoId.innerHTML += "";

    function DetailsAds(){
         var ClassifiedId=document.getElementById("ClassifiedId").value;
        console.log(ClassifiedId);
           var num = Number(ClassifiedId);

           $.ajax({
               type: "POST",
               beforeSend: function (xhr) {
                   xhr.setRequestHeader("XSRF-TOKEN",
                       $('input:hidden[name="__RequestVerificationToken"]').val());
               }
               ,
            url: "/CRM/Configurations/ManageClasifiedChart/AdsDetails?handler=ClassifiedDetails",
               async: false,
               data: JSON.stringify(num),
               dataType: "json",
               contentType: "application/json; charset=utf-8",

               success: function (response) {
                   console.log(response);
                  var ImageFlag=false;
                  var ImageAdTemplateFieldCaptionEn="";
                  var ImageAdTemplateFieldCaptionAr="";
                  
                  var imageArray=[];
                  var VideoFlag=false;
                  var VideoAdTemplateFieldCaptionEn="";
                  var VideoAdTemplateFieldCaptionAr="";
                  
                  var VideoArray=[];
                    var hasFieldType6 = false;
                    for(let i=0;i<response.AdContents["$values"].length;i++)
                    {
                    for (let x = 0; x < response.AdContents["$values"][i].AdContentValues["$values"].length; x++) {
                        console.log(response.AdContents["$values"][i].AdContentValues["$values"][x].FieldTypeId)
                        var fieldType=response.AdContents["$values"][i].AdContentValues["$values"][x].FieldTypeId;
                        if (fieldType == 6) {
                        console.log("d5l")
                            DrawCheckBoxGroup(response.AdContents["$values"][i].AdContentValues["$values"], response.AdContents["$values"][i].AdContentValues["$values"][x].AdTemplateFieldCaptionEn, response.AdContents["$values"][i].AdContentValues["$values"][x].AdTemplateFieldCaptionAr);
                    }


                     if(fieldType==5||fieldType==13)
                        {
                             console.log("d5l 2")
                         DrawToAssignLockValue(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValueEn,response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValueAr,response.AdContents["$values"][i].AdContentValues["$values"][x].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdContentValues["$values"][x].AdTemplateFieldCaptionAr);
                        
                        }

                         if(fieldType==3||fieldType==4||fieldType==7||fieldType==2||fieldType==1)
                        {
                         DrawToAssignLookupValue(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValueEn,response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValueAr,response.AdContents["$values"][i].AdContentValues["$values"][x].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdContentValues["$values"][x].AdTemplateFieldCaptionAr);
                        
                        }

                        }
                   
                        
                        
                        
                        //response.AdContents["$values"][i].FieldTypeId==1||response.AdContents["$values"][i].FieldTypeId==2||
                         
                        //     if(response.AdContents["$values"][i].FieldTypeId==1)
                        //{
                        // DrawV(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue,response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        
                        //}
                        //     if(response.AdContents["$values"][i].FieldTypeId==3||response.AdContents["$values"][i].FieldTypeId==7||response.AdContents["$values"][i].FieldTypeId==5||response.AdContents["$values"][i].FieldTypeId==13)
                        //{
                        // DrawToAssignLockValue(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue,response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        
                        //}
                        //     if(response.AdContents["$values"][i].FieldTypeId==8)
                        //{
                        // DrawMainImage(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue,response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        
                        //}
                        //     if(response.AdContents["$values"][i].FieldTypeId==9)
                        //{
                        //   ImageFlag=true;
                        //   ImageAdTemplateFieldCaptionEn=response.AdContents["$values"][i].AdTemplateFieldCaptionEn
                        //   ImageAdTemplateFieldCaptionAr=response.AdContents["$values"][i].AdTemplateFieldCaptionAr
                        //   imageArray.push(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue)
                        //// DrawGalary(response.AdContents["$values"][i].AdContentValues["$values"],response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        // console.log(response.AdContents["$values"][i])
                        //}
                        //     if(response.AdContents["$values"][i].FieldTypeId==10)
                        //{
                        // DrawPromoVedio(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue,response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        
                        //}
                        //      if(response.AdContents["$values"][i].FieldTypeId==14)
                        //{
                        // DrawMap(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue,response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        
                        //}

                     



                        //     if(response.AdContents["$values"][i].FieldTypeId==11)
                        //{
                        //    VideoFlag=true;
                        //   VideoAdTemplateFieldCaptionEn=response.AdContents["$values"][i].AdTemplateFieldCaptionEn
                        //   VideoAdTemplateFieldCaptionAr=response.AdContents["$values"][i].AdTemplateFieldCaptionAr
                        //   VideoArray.push(response.AdContents["$values"][i].AdContentValues["$values"][0].ContentValue)
                   
                        // //DrawVedioGalary(response.AdContents["$values"][i].AdContentValues["$values"],response.AdContents["$values"][i].AdTemplateFieldCaptionEn,response.AdContents["$values"][i].AdTemplateFieldCaptionAr);
                        //}
                        
                    }
                
                    
                    
                    
                    
                    //if(imageArray.length!=0&&ImageFlag==true){
                    //DrawGalary(imageArray,ImageAdTemplateFieldCaptionEn,ImageAdTemplateFieldCaptionAr);

                    //}
                    //if(VideoArray.length!=0&&VideoFlag==true){
                    //DrawVedioGalary(VideoArray,VideoAdTemplateFieldCaptionEn,VideoAdTemplateFieldCaptionAr);

                    //}

               },
               failure: function (response) {
               }
           });
    }


    function DrawCheckBoxGroup(AdContentValues, AdTemplateFieldCaptionEn, AdTemplateFieldCaptionAr) {
        // Create a parent div element with the class "col-sm-6" 
      console.log("DrawCheckBoxGroup")
        console.log(AdContentValues)
        var divParent = document.createElement("div");
        divParent.className = "col-sm-6";
       

        // Create a div element with the class "mt-3"
        var divElement = document.createElement("div");
        divElement.className = "mt-3";

        // Create an h5 element with the class "fs-14" and text based on language preference
        var h5Element = document.createElement("h5");
        h5Element.className = "fs-14";
        if (localStorage.getItem("lang") === "en") {
            h5Element.textContent = AdTemplateFieldCaptionEn;
        } else {
            h5Element.textContent = AdTemplateFieldCaptionAr;
        }

        // Create a ul element with the class "list-unstyled" and id "productList"
        var ulElement = document.createElement("ul");
        ulElement.className = "list-unstyled";
        ulElement.id = "productList";

        // Loop through the feature items and create li elements for each
for (var i = 0; i < AdContentValues.length; i++) {
    var featureTextEN = AdContentValues[i].ContentValueEn;
     var featureTextAR = AdContentValues[i].ContentValueAr;

    var liElement = document.createElement("li");
    liElement.className = "py-1";

    var icon = document.createElement("i");
    icon.className = "mdi mdi-circle-medium me-1 text-muted align-middle";
       if (localStorage.getItem("lang") === "en") {
    var textNode = document.createTextNode(featureTextEN);
        }
        else {
    var textNode = document.createTextNode(featureTextAR);
        }

    liElement.appendChild(icon);
    liElement.appendChild(textNode);

    ulElement.appendChild(liElement);
}

        // Append the h5 element and ul element to the div element
        divElement.appendChild(h5Element);
        divElement.appendChild(ulElement);

        // Append the div element to the parent div element (divParent)
        divParent.appendChild(divElement);

        // Append the parent div element (divParent) to the parent element (Feature)
        Feature.appendChild(divParent);
    }

  function DrawToAssignLockValue(ContentValueEn,ContentValueAr,AdTemplateFieldCaptionEn,AdTemplateFieldCaptionAr)
            {
                 console.log("lock")
                const lang = localStorage.getItem("lang");
let message = "";
if (lang === "en") {
    message = `<div class="col-sm-6">
        <div class="mt-3">
            <h5 class="fs-14">Services :</h5>
            <ul class="list-unstyled product-desc-list">
                <li class="py-1"><span>${AdTemplateFieldCaptionEn}</span>&nbsp <span>${ContentValueEn}</span> </li>
            </ul>
        </div>
    </div>`;
    Feature.innerHTML +=message;
} 
else {
    message = `<div class="col-sm-6">
        <div class="mt-3">
            <h5 class="fs-14">Services :</h5>
            <ul class="list-unstyled product-desc-list">
                <li class="py-1"><span>${AdTemplateFieldCaptionAr}</span>&nbsp <span>${ContentValueAr}</span> </li>
            </ul>
        </div>
    </div>`;
        Feature.innerHTML +=message;

}
            }
            
  function DrawToAssignLookupValue(ContentValueEn,ContentValueAr,AdTemplateFieldCaptionEn,AdTemplateFieldCaptionAr){

       const lang = localStorage.getItem("lang");
let message = "";
if (lang === "en") {
    message = `
    <div class="table-responsive">
        <table class="table mb-0">
            <tbody>
                <tr>
                    <th scope="row" style="width: 200px;">${AdTemplateFieldCaptionEn}</th>
                    <td>${ContentValueEn}</td>
                </tr>
               
            </tbody>
        </table>
    </div>
`;
    Info.innerHTML +=message;
} 
else {
    message = ` <div class="table-responsive">
        <table class="table mb-0">
            <tbody>
                <tr>
                    <th scope="row" style="width: 200px;">${AdTemplateFieldCaptionAr}</th>
                    <td>${ContentValueAr}</td>
                </tr>
               
            </tbody>
        </table>
    </div>`;
        Info.innerHTML +=message;

}
  }
  function map(){
      var map;
var latitude= document.getElementById('LatID').value
console.log(latitude);
var Lngitute= document.getElementById('LngID').value
console.log(Lngitute);
       // Markers
    if (document.getElementById('gmaps-markers')) {
        map = new GMaps({
            div: '#gmaps-markers',
            lat: latitude,
            lng: Lngitute
        });
        map.addMarker({
            lat: latitude,
            lng: Lngitute,
            title: 'Lima',
            details: {
                database_id: 42,
                author: 'HPNeo'
            },
            click: function (e) {
                if (console.log)
                    console.log(e);
                alert('You clicked in this marker');
            }
        });
    }
  }
            
   window.onload = () => {
    DetailsAds();
    map();
};
</script>